{"version":3,"sources":["ChatContext.js","ChatHandler.js","Youtube.js","Chatter.js","App.js","serviceWorker.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","chats","chatsReducer","state","action","heightReal","standardWidth","standardHeight","left","Math","random","top","type","concat","text","chat","Error","ChatsStateContext","createContext","ChatsDispatchContext","ChatProvider","children","useReducer","dispatch","Provider","value","useChatsDispatch","context","useContext","ChatHandler","id","useState","showComponent","setShowComponent","useEffect","timer","setTimeout","clearTimeout","style","position","className","Youtube","team","useChatsState","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","title","src","frameBorder","allow","map","Chatter","setValue","onSubmit","e","preventDefault","placeholder","onChange","target","onClick","roomData","all","teamname","af","dwg","drx","gen","hle","kt","sb","sp","dyn","t1","TemplatePage","match","params","to","color","href","LobbyPage","App","path","component","render","location","pathname","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b918ef1.chunk.js","sourcesContent":["import React, { useReducer, createContext, useContext } from 'react';\r\n\r\nexport function getWindowDimensions() {\r\n    const {innerWidth: width, innerHeight: height} = window;\r\n    return {\r\n        width,\r\n        height\r\n    }\r\n};\r\n\r\nconst chats = [];\r\n\r\nfunction chatsReducer (state, action) { \r\n    const {height, width} = getWindowDimensions();\r\n    const heightReal = height - 160;\r\n\r\n    const standardWidth = heightReal < (0.5625 * width) ? heightReal / 0.5625 : width;\r\n    const standardHeight = standardWidth * 0.5625;\r\n    const left = (heightReal < (0.5625 * width) ? (width-standardWidth)/2 : 0) + standardWidth * Math.random();\r\n    const top = 80 + standardHeight * Math.random();\r\n\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat({\r\n                text: action.chat,\r\n                left,\r\n                top,\r\n            });\r\n        case 'CLEAR':\r\n            return [];\r\n        default:\r\n            throw new Error(`Unhandled Action Type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst ChatsStateContext = createContext();\r\nconst ChatsDispatchContext = createContext();\r\n\r\nexport default function ChatProvider ({ children }) {\r\n    const [state, dispatch] = useReducer(chatsReducer, chats);\r\n\r\n    return (\r\n        <ChatsStateContext.Provider value={state}>\r\n            <ChatsDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </ChatsDispatchContext.Provider>\r\n        </ChatsStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useChatsState () {\r\n    const context = useContext(ChatsStateContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find ChatsProvider');\r\n    }\r\n    return context;\r\n}\r\nexport function useChatsDispatch () {\r\n    const context = useContext(ChatsDispatchContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find DispatchContext');\r\n    }\r\n    return context;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './ChatHandler.scss'\r\n\r\n\r\nfunction ChatHandler ({ children, id, left, top }) {\r\n\r\n    const [showComponent, setShowComponent] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowComponent(false);\r\n        }, 8000);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top,\r\n        left\r\n    } \r\n    \r\n    return showComponent\r\n        ? <div className=\"chat\" style={style}>{children}</div>\r\n        : null;\r\n}\r\n\r\nexport default ChatHandler;","import React, { useState, useEffect } from 'react';\r\nimport './Youtube.scss'\r\nimport { getWindowDimensions } from './ChatContext'\r\nimport ChatHandler from './ChatHandler';\r\nimport { useChatsState } from './ChatContext';\r\nimport { useChatsDispatch } from './ChatContext';\r\n\r\nfunction useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  \r\n    useEffect(() => {\r\n      function handleResize() {\r\n        setWindowDimensions(getWindowDimensions());\r\n      }\r\n  \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n  \r\n    return windowDimensions;\r\n}\r\n\r\nfunction Youtube({ team }) {\r\n\r\n    const youtubeUrl = \"https://www.youtube.com/embed/dccezgS8jf0\";\r\n\r\n    const state = useChatsState();\r\n\r\n    const {height, width} = useWindowDimensions();\r\n    const heightReal = height - 160;\r\n\r\n    const dispatch = useChatsDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'CLEAR',\r\n        });\r\n    }, [dispatch]);\r\n\r\n    const style = {\r\n        width: width,\r\n    }\r\n    if(heightReal < (0.5625 * width)) {\r\n        style.width = heightReal / 0.5625;\r\n    }\r\n\r\n    return (\r\n        <div className=\"video\" style={style}>\r\n            <div className=\"video-ratio\">\r\n                <iframe\r\n                    title=\"Youtube\"\r\n                    width=\"1903\" height=\"768\"\r\n                    src={`${youtubeUrl}?autoplay=1`}\r\n                    frameBorder=\"0\" allow=\"autoplay; encrypted-media; gyroscope; picture-in-picture\">\r\n                </iframe>\r\n            </div>\r\n            {state.map(chat =>\r\n                <ChatHandler top={chat.top} left={chat.left}>\r\n                    {chat.text}\r\n                </ChatHandler>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Youtube;","import React, { useState } from 'react';\r\nimport './Chatter.scss';\r\nimport { useChatsDispatch } from './ChatContext';\r\n\r\nfunction Chatter({ team }) {\r\n\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useChatsDispatch();\r\n    \r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'CREATE',\r\n            chat: value\r\n        });\r\n        // THINGS TO DO AFTER SUBMIT\r\n        setValue('');\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chatter-wrapper\">\r\n            <form onSubmit={onSubmit}>\r\n                <input placeholder=\"채팅을 입력하세요.\" onChange={onChange} value={value}/>\r\n                <button className=\"submit\" onClick={onSubmit}>전송</button>   \r\n            </form>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatter;","import React from 'react';\nimport Youtube from './Youtube';\nimport Chatter from './Chatter';\nimport './App.scss';\nimport ChatProvider from './ChatContext';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport { MdArrowBack } from \"react-icons/md\";\n\n\nfunction App() {\n  return (\n    <>\n      <ChatProvider>\n        <Switch>\n          <Route path=\"/lobby\" component={LobbyPage}/>\n          <Route path=\"/room/:team\" component={TemplatePage}/>\n          <Route render={({ location }) =>\n            <div>\n              <h2>이 페이지는 존재하지 않습니다.</h2>\n              <p>{location.pathname}</p>\n            </div>\n          }/>   \n        </Switch>  \n      </ChatProvider>\n    </>\n  );\n}\n\nconst roomData = {\n  all: { //아무 팀 팬\n    teamname: \"모두\",\n  },\n  af: { //아프리카 프릭스\n    teamname: \"아프리카 프릭스\"\n  },\n  dwg: { //담원게이밍\n    teamname: \"담원게이밍\"\n  },\n  drx: { //DRX\n    teamname: \"DRX\"\n  },\n  gen: { //젠지\n    teamname: \"젠지\"\n  },\n  hle: { //한화생명\n    teamname: \"한화생명\"\n  },\n  kt: { //KT 롤스터\n    teamname: \"KT 롤스터\"\n  },\n  sb: { //샌드박스\n    teamname: \"샌드박스 게이밍\"\n  },\n  sp: { //설해원 프린스\n    teamname: \"설해원 프린스\"\n  },\n  dyn: { //팀 다이나믹스\n    teamname: \"팀 다이나믹스\"\n  },\n  t1: { //skt t1\n    teamname: \"T1\"\n  },\n\n}\n\nfunction TemplatePage({ match }) {\n\n  const { team } = match.params;\n  const { teamname } = roomData[team];\n\n  if(!teamname) {\n    return (\n      <div>\n        <h2>이 페이지는 존재하지 않습니다.</h2>\n      </div>\n      );\n  }\n\n  return (\n    <>\n      <header>\n        <Link to=\"/lobby\"><MdArrowBack style={{color: \"#DDDDDD\"}} /></Link>&nbsp;&nbsp;&nbsp;\n        #함께 봐요&nbsp;&nbsp;&nbsp;#LCK&nbsp;&nbsp;&nbsp;#{teamname}\n        <a href=\"https://toon.at/donate/beomseok-kang\" className=\"donation-link\">후원하기</a>\n      </header>\n      <Youtube team={team}/>\n      <Chatter team={team}/>\n    </>\n  );\n}\n\nfunction LobbyPage() {\n\n  return (\n    <>\n      <div className=\"body__container\">\n        <div className=\"inner\">\n          <h2>입장하실 방을 선택해 주세요.</h2>\n          <Link to=\"/room/all\"><div className=\"link--to-room\"><div></div>모두</div></Link>\n          <h3>팀 방</h3>\n          <ul>\n            <Link to=\"/room/t1\"><li id=\"t1\">T1</li></Link>\n            <Link to=\"/room/drx\"><li id=\"drx\">DRX</li></Link>\n            <Link to=\"/room/kt\"><li id=\"kt\">KT</li></Link>\n            <Link to=\"/room/dyn\"><li id=\"dyn\">Team DYN</li></Link>\n            <Link to=\"/room/hle\"><li id=\"hle\">한화생명</li></Link>\n            <Link to=\"/room/dwg\"><li id=\"dwg\">담원</li></Link>\n            <Link to=\"/room/gen\"><li id=\"gen\">Gen G</li></Link>\n            <Link to=\"/room/af\"><li id=\"af\">Afreeca</li></Link>\n            <Link to=\"/room/sp\"><li id=\"sp\">설해원</li></Link>\n            <Link to=\"/room/sb\"><li id=\"sb\">샌드박스</li></Link>\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}